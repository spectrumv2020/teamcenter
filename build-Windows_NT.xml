<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="build-Windows_NT-TC">    
    <taskdef resource="cpptasks.tasks"/>
    <property name="link.prefix" value="lib"/>
    
    <condition property="extn" value="dll">
        <equals arg1="shared" arg2="${link.type}"/>
    </condition>    
    
    <condition property="extn" value="exe">
        <equals arg1="executable" arg2="${link.type}"/>
    </condition>

    <condition property="index" value="2">
        <equals arg1="shared" arg2="${link.type}"/>
    </condition>

    <condition property="index" value="1">
        <equals arg1="executable" arg2="${link.type}"/>
    </condition>    
    
    <target name="init">
         <tstamp/>
    </target>
    
    <macrodef name="compile">
        <attribute name="srcfiles" default="" />
        <attribute name="includes" default="" />
        <sequential>
            <mkdir dir="${obj.dir}"/>
            <cc name="msvc" objdir="${obj.dir}">
                <compilerarg value="/MP" />  <!-- enable multiprocessor compile -->
                <compilerarg value="/c" />
                <compilerarg value="/nologo" />
                <compilerarg value="/EHsc" />
                <compilerarg value="/W1" />
                <compilerarg value="/Ox" />
                <compilerarg value="/Oy-" />
                <compilerarg value="/Zi" />
                <compilerarg value="/Zc:wchar_t-"/>
                <compilerarg value="/MD" />
                <compilerarg value="/TP" />
                <compilerarg value="/MP" />
                <compilerarg value="/INCREMENTAL" />
                <compilerarg value="/DEBUG:FASTLINK" />
                <compilerarg value="-DNT40" />
                <compilerarg value="-DPOMDLL" />
                <compilerarg value="-DCRTAPI1=_cdecl" />
                <compilerarg value="-DCRTAPI2=cdecl" />
                <compilerarg value="-D_WIN32" />
                <compilerarg value="-DWIN32" />
                <compilerarg value="-DWIN32_LEAN_AND_MEAN" />
                <compilerarg value="-DWNT" />
                <compilerarg value="-DBYPASS_FLEX" />
                <compilerarg value="-D_WIN64" /> 
                <compilerarg value="-D_INTEL=1" />                
                <compilerarg value="-DIPLIB=none" />
                <compilerarg value="-D${export.lib}" />
                <compilerarg value="-D_CRT_SECURE_NO_DEPRECATE"/>
                <compilerarg value="-D_CRT_NONSTDC_NO_DEPRECATE"/>
                <includepath path="${TC_INCLUDE}" />
                <includepath path="${TC_ROOT}/include_cpp" />
                <includepath path="${PROJECT_ROOT}" />

                <includepath>
                    <path refid="@{includes}"/>
                </includepath>

                <!-- Source files are provided from the calling modules -->
                <fileset refid="@{srcfiles}"/>
           </cc>    
        </sequential>
    </macrodef>
    
    <macrodef name="link">
        <attribute name="linktype" default="" />
        <attribute name="outfile" default="" />
        <attribute name="objs" default="" />
        <attribute name="linkwith" default="" />
        
        <sequential>
            <mkdir dir="${link.dir}"/>
            <cc name="msvc" link="@{linktype}" subsystem="console" outfile="@{outfile}" >
                <linkerarg value="/debug" />
                <linkerarg value="/nodefaultlib" />
                <linkerarg value="/nologo" />
                <linkerarg value="/machine:x64" />
                <linkerarg value="/subsystem:console" />                
                <linkerarg value="/FORCE:MULTIPLE" if="cpptest"/>
                <linkerarg value="-libpath:${TC_ROOT}/lib"/>
                <fileset refid="@{objs}"/>
                
                <syslibset libs="ucrt,vcruntime,wsock32,advapi32,msvcrt,msvcprt,oldnames,kernel32,winmm" />
                <libset dir="${TC_ROOT}/lib" libs="libae,libaie,libappr,libarchive,libbackup,libbase_utils,libbom,libcfm,libcollabctx,libcxpom,libdmi,libecm,libeint,libepm,libfclasses,libform,libgrm,libics,libict,libinternal_exits,libitk,liblov,libme,libmechatronics,libmgc,libobjio,libpie,libpom,libproperty,libps,libpublication,libqry,libres,librdv,libsa,libsml,libss,libtcsso,libstep,libsub_mgr,libsyss,libtc,libtccore,libtccoreext,libtcinit, libtcsso,libtextsrv,libuser_exits,xerces322_X_18,libmld,libge_bom,libge_itkpp" />
                <libset dir="${PROJECT_ROOT}/lib" libs="${link.depend.libs}"/>
                <libset dir="${env.JAVA_HOME}/lib" libs="*"/>
            </cc>
        </sequential>
    </macrodef>    
    

    <target name="compile" depends="init">
        <echo message="Compiling ${ant.project.name}"/>
        <compile srcfiles="source" includes="include.path"/>
    </target>

    <target name="link" depends="compile">
        <mkdir dir="${PROJECT_ROOT}/lib" />

        <echo message="Building ${ant.project.name}"/>
        
        <fileset id="objfiles" dir="${obj.dir}">
            <include name="*.obj"/>
            <exclude name="TEST*.obj"/>
        </fileset>
        
        <link linktype="${link.type}" outfile="${link.dir}/${link.prefix}${link.name}" objs="objfiles" linkwith="" />

        <!-- Now copy the lib files to dist/lib -->
        <copy todir="${PROJECT_ROOT}/lib" flatten="true" verbose="true">
            <fileset dir="${link.dir}">
                <include name="*.lib" />
                <exclude name="TEST*.lib" />
            </fileset>
        </copy>
        
    </target>

    <target name="install" depends="dist"/>

    <target name="dist" depends="link"/>
    
    <target name="build_exe" depends="">
        <basename property="program" file="${file}" suffix=".cxx"/>
        
        <fileset id="src_file"  dir=".">
            <include name="${program}.cxx" /> 
        </fileset>        
        
        <fileset id="obj_file"  dir="obj">
            <include name="${program}.obj" />
        </fileset>
        
        <echo message="Compiling ${file}"/>
        <compile srcfiles="src_file" includes="include.path"/>
        
        <condition property="cpptest">
               <contains substring="TEST_" string="${program}"/>
        </condition>
        
        <echo message="Building ${program}.exe"/>
        <link linktype="executable" outfile="${link.dir}/${program}" objs="obj_file" linkwith="${link.depend}"/>

    </target>
   
    <!-- Create log file for ant targets with additional info. Depend on this target to enable logging -->
    <target name="logging" description="Provides logging for build targets">
        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd_HH-mm-ss"/>
        </tstamp>
        
        <property name="build.log.dir" location="${basedir}/buildlogs"/>
        <mkdir dir="${build.log.dir}"/>
        <property name="build.log.filename" value="build_${timestamp}.log"/>
        <record name="${build.log.dir}/${build.log.filename}" loglevel="verbose" append="false"/>
        <echo message="Build logged to ${build.log.filename}"/>
    </target>   
</project>